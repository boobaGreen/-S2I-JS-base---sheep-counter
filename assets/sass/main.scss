@use "../sass/partials" as *;

/* ------- General style ------- */

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font: inherit;
  -webkit-tap-highlight-color: transparent;
}

*:focus {
  outline: none !important;
  border: none;
  box-shadow: none;
}
html {
  font-family: myFontCounter;
  font-size: 62.5%; // 1 rem = 10px 10px/16px=62.5%

  @include respond(tab-land) {
    //width<1200
    //1 rem=9px, 9/16=56.25%
    font-size: 56.25%;
  }
  @include respond(tab-port) {
    //width<900
    //1 rem=8px, 8/16=50%
    font-size: 50%;
  }
  @include respond(phone-land) {
    //width<600
    //1 rem=8px, 8/16=50%
    font-size: 40%;
  }
  @include respond(phone-port) {
    //width<600
    //1 rem=8px, 8/16=50%
    font-size: 40%;
  }
  // qui in mezzo c'e la misura di defatult !!!!
  // font*size in quseto caso di html 62.5%
  // >1200 e minore di 1800

  @include respond(big-desktop) {
    font-size: 75%; //1rem=12, 12/16 =75%
  }
}
body {
  min-width: 200px;
  min-height: 300px;
  overflow: hidden;
  padding: 7rem;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  height: 100vh;
  background-color: $color-background-night;

  /////previeni highlight
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */
  font-size: 16px;
  @include respond(tab-land) {
    //width<1200
    padding: 5rem;
  }
  @include respond(tab-port) {
    //width<900
    padding: 3rem;
  }
  @include respond(phone-port) {
    //width<700
    padding: 2rem;
  }
  @include respond(phone-land) {
    //width<700
    padding: 2rem;
  }
}

/* ------- Counter - general style  ------- */
.counter {
  flex-grow: 1;
  min-width: min-content;
  width: 80%;
  background-color: transparent;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  box-shadow: 5px 5px 5px 5px $color-box-shadow;
  border-radius: 0.3rem;
  padding: 2rem;
  gap: 12rem; // default dai 1200 ai 1800
  div {
    margin: auto;
  }
  @include respond(tab-land) {
    //width<1200
    gap: 12rem;
  }
  @include respond(tab-port) {
    //width<900
    gap: 10rem;
    width: 95%;
  }
  @include respond(phone-port) {
    //width<700
    gap: 10rem;
    width: 95%;

    //test da togliere *********
    box-shadow: 5px 5px 5px 5px yellowgreen;
  }
  @include respond(phone-land) {
    //width<700
    gap: 10rem;
    width: 95%;

    //test da togliere *********
    box-shadow: 5px 5px 5px 5px red;
  }
}

/* ------- Counter - display number ------- */

.display-number {
  height: 6rem;
  width: 25rem;
  background: transparent;
  color: $color-moon-yellow;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  font-size: 5rem;
}

/* ------- Counter - button's section ------- */

.button-container {
  display: flex;

  flex-direction: inline-flex;
  align-items: flex-start;
  justify-content: space-between;
  width: 80%;
  gap: 5rem;

  @include respond(tab-land) {
    //width<1200
  }
  @include respond(tab-port) {
    //width<900
  }
  @include respond(phone-port) {
    //width<700
    flex-direction: column;
    align-items: center;
    gap: 4rem;
  }
  @include respond(phone-land) {
    //width<700
    flex-direction: column;
    align-items: center;
    gap: 4rem;
  }
}

.sheep {
  flex-grow: 2;
  z-index: -5;
}

button {
  background-color: $color-empty-button;
  font-size: 2.2rem;
  font-weight: bolder;
  height: 11rem;
  width: 11rem;
  border-radius: 100%;
  border: none;

  padding: 0.1rem;
  text-align: center;
  -webkit-transition-duration: 0.8s; /* Safari */
  transition-duration: 0.8s;
  text-decoration: none;
  position: relative;
  overflow: hidden;
  cursor: pointer;

  @include respond(tab-port) {
    //width<900
    height: 11rem;
    width: 11rem;
  }
  @include respond(phone) {
    //width<600
    height: 11rem;
    width: 11rem;
  }
}
button:hover {
  transform: translate(+0.85rem, -0.825rem);

  &.button-reset {
    box-shadow: -5px 5px 3px $color-button-rst-more;
    color: $color-button-rst-more;
  }
  &.button-decrement {
    box-shadow: -5px 5px 3px $color-button-dec-more;
    color: $color-button-dec-more;
  }
  &.button-increment {
    box-shadow: -5px 5px 3px $color-button-inc-more;
    color: $color-button-inc-more;
  }
}
button:after {
  content: "";
  background: $color-shadow-1;
  border-radius: 100rem;
  display: block;
  position: absolute;
  padding-top: 350%;
  padding-left: 300%;
  margin-left: -2rem !important;
  margin-top: -120%;
  opacity: 0;
  transition: all 0.8s;
}

button:active:after {
  padding: 0;
  margin: 0;
  opacity: 1;
  transition: 0s;
}
/* addElementInsideCounterButtonSection("button", "button-decrement", "-");
  addElementInsideCounterButtonSection("button", "button-reset", "reset");
  addElementInsideCounterButtonSection("button", "button-increment", "+"); */
.button-decrement {
  box-shadow: -5px 5px 3px $color-button-dec;
  color: $color-button-dec;
}
.button-increment {
  box-shadow: -5px 5px 3px $color-button-inc;
  color: $color-button-inc;
}
.button-reset {
  box-shadow: -5px 5px 3px $color-button-rst;
  color: $color-button-rst;
}
/* ------- Counter - name's container ------- */

/* ------- Mediaquery ------- */

//@import "../sass/partials/mediaquery";
